{"version":3,"file":"index.modern.mjs","sources":["../src/Exception.ts","../src/Util.ts","../src/index.ts"],"sourcesContent":["export class TryException extends Error {\n  statusCode: number\n\n  constructor(message: string, statusCode?: number) {\n    super(message)\n\n    this.name = 'TryException'\n    this.statusCode = statusCode || 400\n\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n","export const isFunction = fn => fn?.constructor?.name === 'Function'\nexport const isAsyncFunction = fn => fn?.constructor?.name === 'AsyncFunction'\nexport const isPlainRegex = input => input.constructor?.name === 'RegExp'\nexport const isPlainString = input => typeof input === 'string' && input.trim()\n\nexport const execute = (o, params = null) => {\n  if (isAsyncFunction(o)) {\n    return o(params)\n  }\n\n  if (isFunction(o)) {\n    return o(params)\n  }\n\n  return (() => o)()\n}\n\nexport const delay = ms => new Promise((resolve, reject) => setTimeout(resolve, ms))\n\nexport const race = (milliseconds, ...promises) => {\n  const timeout = new Promise((resolve, reject) => {\n    setTimeout(() => reject(`limit time excedded (${milliseconds} ms)`), milliseconds)\n  })\n\n  return Promise.race([timeout, ...promises])\n}\n","import { TryException } from '@/Exception'\nimport { execute, delay, race, isFunction, isAsyncFunction, isPlainString, isPlainRegex } from '@/Util'\n\nexport { delay, race, isAsyncFunction, isFunction, isPlainString, isPlainRegex, execute as Execute }\n\ninterface TryOptions {\n  max?: number\n  exponential?: number\n  count?: number\n  strict?: boolean\n  timeout?: number\n  onError?: any\n  async?: boolean\n  onRetry?: (count: number, isReached: boolean) => void\n}\n\nexport function safetry<E = Error, T = any>(callable: any, options?: TryOptions): [E, T] | any {\n  return safeTry(callable, options)\n}\n\nexport function safeTry<E = Error, T = any>(callable: any, options?: TryOptions): [E, T] | any {\n  const max = options?.max ?? 0\n  const isAsync = options?.async ?? isAsyncFunction(callable)\n  let count = options?.count ?? 0\n\n  try {\n    if (isAsync) {\n      return race(options?.timeout ?? 9_999, execute(callable))\n        .then(res => {\n          return [null, res]\n        })\n        .catch(e => {\n          if (count >= max) {\n            if (options?.onError) return [options.onError(e), null]\n\n            return [e, null]\n          }\n\n          count++\n\n          if (options?.onRetry) options.onRetry(count, count >= max)\n\n          return Try(callable, { ...options, count })\n        })\n    }\n\n    if (isFunction(callable)) {\n      return [null, execute(callable)]\n    }\n\n    return [null, execute(callable)]\n  } catch (error) {\n    if (count >= max) {\n      if (options?.strict) {\n        throw new TryException(error)\n      } else {\n        if (options?.onError) return [options.onError(error), null]\n\n        return [error, null]\n      }\n    }\n\n    count++\n\n    if (options?.onRetry) options.onRetry(count, count >= max)\n\n    if (max > 0) {\n      return (async function () {\n        await delay(count ** (options?.exponential ?? 1.5) * 1_000)\n\n        return Try(callable, { ...options, count })\n      })()\n    }\n\n    return Try(callable, { ...options, count })\n  }\n}\n\nexport function Try(callable: any, options?: TryOptions) {\n  const max = options?.max ?? 0\n  const isAsync = options?.async ?? isAsyncFunction(callable)\n  let count = options?.count ?? 0\n\n  try {\n    if (isAsync) {\n      return race(options?.timeout ?? 9_999, execute(callable)).catch(e => {\n        if (count >= max) {\n          return options?.onError ? execute(options?.onError, e) : e\n        }\n        \n        count++\n        \n        if (options?.onRetry) options.onRetry(count, count >= max)\n          \n          if (max > 0) {\n          return (async function () {\n            await delay((count ** (options?.exponential ?? 0.5)) * 1_000)\n            return Try(callable, { ...options, count })\n          })()\n        }\n\n        return Try(callable, { ...options, count })\n      })\n    }\n\n    if (isFunction(callable)) {\n      return execute(callable)\n    }\n\n    return execute(callable)\n  } catch (error) {\n    if (count >= max) {\n      if (options?.strict) {\n        throw new TryException(error)\n      } else {\n        return execute(options?.onError, error)\n      }\n    }\n\n    count++\n\n    if (options?.onRetry) options.onRetry(count, count >= max)\n\n    if (max > 0) {\n      return (async function () {\n        await delay((count ** (options?.exponential ?? 0.5)) * 1_000)\n        return Try(callable, { ...options, count })\n      })()\n    }\n\n    return Try(callable, { ...options, count })\n  }\n}\n"],"names":["TryException","Error","constructor","message","statusCode","super","this","name","captureStackTrace","isFunction","fn","_fn$constructor","isAsyncFunction","_fn$constructor2","isPlainRegex","input","_input$constructor","isPlainString","trim","execute","o","params","delay","ms","Promise","resolve","reject","setTimeout","race","milliseconds","promises","timeout","safetry","callable","options","safeTry","_options$max","_options$async","_options$count","max","isAsync","async","count","_options$timeout","then","res","catch","e","onError","onRetry","Try","_extends","error","strict","_options$exponential","exponential","_options$max2","_options$async2","_options$count2","_options$timeout2","_options$exponential2","_options$exponential3"],"mappings":"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"}