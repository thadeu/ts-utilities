{"version":3,"file":"index.umd.js","sources":["../src/Exception.ts","../src/Util.ts","../src/index.ts"],"sourcesContent":["export class TryException extends Error {\n  statusCode: number\n\n  constructor(message: string, statusCode?: number) {\n    super(message)\n\n    this.name = 'TryException'\n    this.statusCode = statusCode || 400\n\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n","export const isFunction = fn => fn?.constructor?.name === 'Function'\nexport const isAsyncFunction = fn => fn?.constructor?.name === 'AsyncFunction'\nexport const isPlainRegex = input => input.constructor?.name === 'RegExp'\nexport const isPlainString = input => typeof input === 'string' && input.trim()\n\nexport const execute = (o, params = null) => {\n  if (isAsyncFunction(o)) {\n    return o(params)\n  }\n\n  if (isFunction(o)) {\n    return o(params)\n  }\n\n  return (() => o)()\n}\n\nexport const delay = ms => new Promise((resolve, reject) => setTimeout(resolve, ms))\n\nexport const race = (milliseconds, ...promises) => {\n  const timeout = new Promise((resolve, reject) => {\n    setTimeout(() => reject(`limit time excedded (${milliseconds} ms)`), milliseconds)\n  })\n\n  return Promise.race([timeout, ...promises])\n}\n","import { TryException } from '@/Exception'\nimport { execute, delay, race, isFunction, isAsyncFunction, isPlainString, isPlainRegex } from '@/Util'\n\nexport { delay, race, isAsyncFunction, isFunction, isPlainString, isPlainRegex }\n\ninterface TryOptions {\n  max?: number\n  exponential?: number\n  count?: number\n  strict?: boolean\n  timeout?: number\n  onError?: any\n  onRetry?: (count: number, isReached: boolean) => void\n}\n\nexport function Try(callable: any, options?: TryOptions) {\n  const max = options?.max ?? 0\n  let count = options?.count ?? 0\n\n  try {\n    if (isAsyncFunction(callable)) {\n      return race(options?.timeout ?? 9_999, execute(callable)).catch(e => {\n        if (count >= max) {\n          return execute(options?.onError, e)\n        }\n\n        count++\n\n        if (options?.onRetry) options.onRetry(count, count >= max)\n\n        return Try(callable, { ...options, count })\n      })\n    }\n\n    if (isFunction(callable)) {\n      return execute(callable)\n    }\n\n    return execute(callable)\n  } catch (error) {\n    if (count >= max) {\n      if (options?.strict) {\n        throw new TryException(error)\n      } else {\n        return execute(options?.onError, error)\n      }\n    }\n\n    count++\n\n    if (options?.onRetry) options.onRetry(count, count >= max)\n\n    if (max > 0) {\n      return (async function () {\n        await delay((count ** options?.exponential ?? 1.5) * 1_000)\n        return Try(callable, { ...options, count })\n      })()\n    }\n\n    return Try(callable, { ...options, count })\n  }\n}\n"],"names":["TryException","_Error","message","statusCode","_this","call","this","name","Error","captureStackTrace","_assertThisInitialized","constructor","_wrapNativeSuper","isFunction","fn","_fn$constructor","isAsyncFunction","_fn$constructor2","execute","o","params","delay","ms","Promise","resolve","reject","setTimeout","race","milliseconds","timeout","concat","slice","arguments","Try","callable","options","_options$max","_options$count","max","count","_options$timeout","e","onError","onRetry","_extends","error","strict","_ref","Math","pow","exponential","then","input","_input$constructor","trim"],"mappings":"6mDAAA,IAAaA,eAAaC,SAAAA,WAGxB,SAAAD,EAAYE,EAAiBC,GAAmB,IAAAC,EAMC,OAL/CA,EAAAH,EAAAI,KAAMH,KAAAA,IAAQI,MAHhBH,gBAKEC,EAAAA,EAAKG,KAAO,eACZH,EAAKD,WAAaA,GAAc,IAEhCK,MAAMC,2IAAiBC,CAAAN,GAAOA,EAAKO,aAAYP,CACjD,CAAC,SAVuBH,KAAAD,yEAUvBA,CAAA,CAVuBC,cAUvBW,EAV+BJ,QCArBK,EAAa,SAAAC,GAAEC,IAAAA,EAAI,MAA0B,cAAxB,MAAFD,GAAe,OAAbC,EAAFD,EAAIH,kBAAF,EAAFI,EAAiBR,KAAmB,EACvDS,EAAkB,SAAAF,GAAE,IAAAG,EAAA,MAA8B,mBAAxBA,MAAFH,GAAAG,OAAEA,EAAFH,EAAIH,kBAAFM,EAAFA,EAAiBV,KAAwB,EAIjEW,EAAU,SAACC,EAAGC,GACzB,YADyBA,IAAAA,IAAAA,EAAS,MAC9BJ,EAAgBG,IAIhBN,EAAWM,GAHNA,EAAEC,GAOGD,CAChB,EAEaE,EAAQ,SAAAC,GAAM,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAAM,OAAKC,WAAWF,EAASF,EAAG,EAAC,EAEvEK,EAAO,SAACC,GACnB,IAAMC,EAAU,IAAIN,QAAQ,SAACC,EAASC,GACpCC,WAAW,WAAM,OAAAD,EAAM,wBAAyBG,EAAY,OAAO,EAAEA,EACvE,GAEA,OAAOL,QAAQI,KAAME,CAAAA,GAAOC,OAAAC,GAAAA,MAAA1B,KAAA2B,UAAc,IAC5C,iBCVgBC,EAAIC,EAAeC,OAAoBC,EAAAC,EAC/CC,EAAkB,OAAfF,EAAGD,MAAAA,OAAAA,EAAAA,EAASG,KAAGF,EAAI,EACxBG,EAAsB,OAAjBF,QAAGF,SAAAA,EAASI,OAAKF,EAAI,EAE9B,IACiCG,IAAAA,EAA/B,OAAIxB,EAAgBkB,GACXP,EAAqB,OAAjBa,EAACL,MAAAA,OAAAA,EAAAA,EAASN,SAAOW,EAAI,KAAOtB,EAAQgB,IAAgB,MAAC,SAAAO,GAC9D,OAAIF,GAASD,EACJpB,EAAe,MAAPiB,OAAO,EAAPA,EAASO,QAASD,IAGnCF,IAEIJ,MAAAA,GAAAA,EAASQ,SAASR,EAAQQ,QAAQJ,EAAOA,GAASD,GAE/CL,EAAIC,EAAQU,EAAA,GAAOT,EAASI,CAAAA,MAAAA,KACrC,IAGE1B,EAAWqB,GACNhB,EAAQgB,GAIlB,CAAC,MAAOW,GACP,GAAIN,GAASD,EAAK,CAChB,SAAIH,GAAAA,EAASW,OACX,MAAM,IAAI9C,EAAa6C,GAEvB,OAAO3B,EAAe,MAAPiB,OAAO,EAAPA,EAASO,QAASG,EAEpC,CAMD,OAJAN,IAEW,MAAPJ,GAAAA,EAASQ,SAASR,EAAQQ,QAAQJ,EAAOA,GAASD,GAElDA,EAAM,EACK,WAAA,IAAA,IAAAS,EAAA,OAAAxB,QAAAC,QACLH,EAA+C,KAAX0B,OAA9BA,EAAAC,KAAAC,IAACV,EAAgB,MAAPJ,OAAO,EAAPA,EAASe,cAAWH,EAAI,OAAaI,KAC3D,WAAA,OAAOlB,EAAIC,EAAQU,EAAOT,CAAAA,EAAAA,GAASI,MAAAA,IAAQ,EAC7C,CAAC,MAAAE,GAAA,OAAAlB,QAAAE,OAAAgB,IAHY,GAMRR,EAAIC,EAAQU,EAAA,CAAA,EAAOT,EAASI,CAAAA,MAAAA,IACpC,CACH,8DD3D4B,SAAAa,GAAKC,IAAAA,EAAI,MAA4B,YAAX,OAAjBA,EAAAD,EAAMzC,kBAAW,EAAjB0C,EAAmB9C,KAAiB,kBAC5C,SAAA6C,GAAS,MAAiB,iBAAVA,GAAsBA,EAAME,MAAM"}