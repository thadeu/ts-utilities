{"version":3,"file":"index.mjs","sources":["../src/Exception.ts","../src/Util.ts","../src/index.ts"],"sourcesContent":["export class TryException extends Error {\n  statusCode: number\n\n  constructor(message: string, statusCode?: number) {\n    super(message)\n\n    this.name = 'TryException'\n    this.statusCode = statusCode || 400\n\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n","export const isFunction = fn => fn?.constructor?.name === 'Function'\nexport const isAsyncFunction = fn => fn?.constructor?.name === 'AsyncFunction'\nexport const isPlainRegex = input => input.constructor?.name === 'RegExp'\nexport const isPlainString = input => typeof input === 'string' && input.trim()\n\nexport const execute = (o, params = null) => {\n  if (isAsyncFunction(o)) {\n    return o(params)\n  }\n\n  if (isFunction(o)) {\n    return o(params)\n  }\n\n  return (() => o)()\n}\n\nexport const delay = ms => new Promise((resolve, reject) => setTimeout(resolve, ms))\n\nexport const race = (milliseconds, ...promises) => {\n  const timeout = new Promise((resolve, reject) => {\n    setTimeout(() => reject(`limit time excedded (${milliseconds} ms)`), milliseconds)\n  })\n\n  return Promise.race([timeout, ...promises])\n}\n","import { TryException } from '@/Exception'\nimport { execute, delay, race, isFunction, isAsyncFunction, isPlainString, isPlainRegex } from '@/Util'\n\nexport { delay, race, isAsyncFunction, isFunction, isPlainString, isPlainRegex, execute as Execute }\n\ninterface TryOptions {\n  max?: number\n  exponential?: number\n  count?: number\n  strict?: boolean\n  timeout?: number\n  onError?: any\n  async?: boolean\n  onRetry?: (count: number, isReached: boolean) => void\n}\n\nexport function safetry<E = Error, T = any>(callable: any, options?: TryOptions): [E, T] | any {\n  return safeTry(callable, options)\n}\n\nexport function safeTry<E = Error, T = any>(callable: any, options?: TryOptions): [E, T] | any {\n  const max = options?.max ?? 0\n  const isAsync = options?.async ?? isAsyncFunction(callable)\n  let count = options?.count ?? 0\n\n  try {\n    if (isAsync) {\n      return race(options?.timeout ?? 9_999, execute(callable))\n        .then(res => {\n          return [null, res]\n        })\n        .catch(e => {\n          if (count >= max) {\n            if (options?.onError) return [options.onError(e), null]\n\n            return [e, null]\n          }\n\n          count++\n\n          if (options?.onRetry) options.onRetry(count, count >= max)\n\n          return Try(callable, { ...options, count })\n        })\n    }\n\n    if (isFunction(callable)) {\n      return [null, execute(callable)]\n    }\n\n    return [null, execute(callable)]\n  } catch (error) {\n    if (count >= max) {\n      if (options?.strict) {\n        throw new TryException(error)\n      } else {\n        if (options?.onError) return [options.onError(error), null]\n\n        return [error, null]\n      }\n    }\n\n    count++\n\n    if (options?.onRetry) options.onRetry(count, count >= max)\n\n    if (max > 0) {\n      return (async function () {\n        await delay(count ** (options?.exponential ?? 1.5) * 1_000)\n\n        return Try(callable, { ...options, count })\n      })()\n    }\n\n    return Try(callable, { ...options, count })\n  }\n}\n\nexport function Try(callable: any, options?: TryOptions) {\n  const max = options?.max ?? 0\n  const isAsync = options?.async ?? isAsyncFunction(callable)\n  let count = options?.count ?? 0\n\n  try {\n    if (isAsync) {\n      return race(options?.timeout ?? 9_999, execute(callable)).catch(e => {\n        if (count >= max) {\n          return options?.onError ? execute(options?.onError, e) : e\n        }\n        \n        count++\n        \n        if (options?.onRetry) options.onRetry(count, count >= max)\n          \n          if (max > 0) {\n          return (async function () {\n            await delay((count ** (options?.exponential ?? 0.5)) * 1_000)\n            return Try(callable, { ...options, count })\n          })()\n        }\n\n        return Try(callable, { ...options, count })\n      })\n    }\n\n    if (isFunction(callable)) {\n      return execute(callable)\n    }\n\n    return execute(callable)\n  } catch (error) {\n    if (count >= max) {\n      if (options?.strict) {\n        throw new TryException(error)\n      } else {\n        return execute(options?.onError, error)\n      }\n    }\n\n    count++\n\n    if (options?.onRetry) options.onRetry(count, count >= max)\n\n    if (max > 0) {\n      return (async function () {\n        await delay((count ** (options?.exponential ?? 0.5)) * 1_000)\n        return Try(callable, { ...options, count })\n      })()\n    }\n\n    return Try(callable, { ...options, count })\n  }\n}\n"],"names":["TryException","_Error","message","statusCode","_this","call","this","name","Error","captureStackTrace","_assertThisInitialized","constructor","_wrapNativeSuper","isFunction","fn","_fn$constructor","isAsyncFunction","_fn$constructor2","isPlainRegex","input","_input$constructor","isPlainString","trim","execute","o","params","delay","ms","Promise","resolve","reject","setTimeout","race","milliseconds","timeout","concat","slice","arguments","safetry","callable","options","safeTry","_options$max","_options$async","_options$count","max","isAsync","async","count","_options$timeout","then","res","e","onError","onRetry","Try","_extends","error","strict","_options$exponential","Math","pow","exponential","_options$max2","_options$async2","_options$count2","_options$timeout2","_options$exponential2","_options$exponential3"],"mappings":"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"}